<?php
/**
 * @file Defines the GenericCronManager class.
 */

/**
 * Provides some common functionality for cron managers.
 */
abstract class GenericCronManager implements CronManagerInterface {
  
  /**
   * The server that we're wrapped around.
   * 
   * @var PhysicalServerInterface
   */
  private $machine = NULL;
  
  /**
   * Configuration manager.
   * 
   * @var ConfigurationManagerInterface
   */
  private $config = NULL;
  
  private $directory = '';
  
  /**
   * Constructor.
   * 
   * @param PhysicalServerInterface $server
   *   The server that is being wrapped.
   */
  public function __construct(PhysicalServerInterface $server, $directory) {
    $this->machine = $server;
    $this->directory = $directory;
    $fromConfig = $server->getSetting(SERVER_SETTING_CRON_DIRECTORY);
    if (!empty($fromConfig)) {
      $this->directory = $fromConfig;
    }
  }
  
  public function setConfiguration(ConfigurationManagerInterface $config) {
    $this->config = $config;
  }
  
  public function config() {
    return $this->config;
  }
  
  public function machine() {
    return $this->machine;
  }
  
  protected function getCronDirectory() {
    return $this->directory;
  }
  
  public function __toString() {
    return '[object] GenericCronManager';
  }
  
}