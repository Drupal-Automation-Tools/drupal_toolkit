<?php

class ResetSiteDatabasePasswordCommand extends GenericSiteCommand {
  
  public function verifyRequirements() {
    if (!$this->requireSite()) { return FALSE; }
    return parent::verifyRequirements();
  }
  
  public function executeCommand() {
    $this->executePasswordReset($this->getSite(), $this->getSite()->getBuildName());
  }
  
  protected function executePasswordReset(GenericDrupalEntity $entity, $name) {
    $password = $this->getPasswordUpdate($name);
    $this->working(STRING_WORKING_RESET_PASSWORD, array(
      '!entity' => $name,
    ));
    if (empty($password)) {
      $this->error(STRING_ERROR_RESET_EMPTY_PASSWORD);
    }
    $e = new DrupalSiteEvent($entity, TRUE);
    $this->events()->fireEvent(EVENT_PRE_RESET_DRUPAL_PASSWORD, $e);
    if (!$e->success()) {
      exit(1);
    }
    $event = new DrupalSiteEvent($entity, FALSE, array(
      'password' => $password,
    ));
    $this->events()->fireEvent(EVENT_RESET_DRUPAL_PASSWORD, $event);
    $success = $event->success();
    if ($success) {
      $refreshconfig = new DrupalSiteEvent($entity, FALSE);
      $this->events()->fireEvent(EVENT_REFRESH_DRUPAL_CONFIGURATION, $refreshconfig);
      $success = $refreshconfig->success();
    }
    $poste = new DrupalSiteEvent($entity, TRUE, array(
      'op_success' => $success,
    ));
    $this->events()->fireEvent(EVENT_POST_RESET_DRUPAL_PASSWORD, $poste);
    if (!$poste->success()) {
      $success = FALSE;
    }
    if ($success) {
      $this->success(STRING_SUCCESS_RESET_PASSWORD);
    }
    else {
      $this->failure(STRING_FAILURE_RESET_PASSWORD);
      exit(1);
    }
  }
  
  protected function getPasswordUpdate($name) {
    $password = DB_RANDOM_PASSWORD;
    if (!extra_empty($this->args()->hasOption(OPTION_RESET_MANUAL_PASSWORD))) {
      $password = NULL;
      $confirmPassword = NULL;
      $attempts = 0;
      while ($attempts < 11 && (empty($password) || empty($confirmPassword) || ($password !== $confirmPassword))) {
        $attempts++;
        if ($attempts > 1) {
          $password = dtk_prompt_user('Invalid password.' . PHP_EOL . 'Enter the new DB password for ' . $site->getBuildName() . ' (enter ' . DB_RANDOM_PASSWORD . ' to set it to a random password): ');
        }
        else {
          $password = dtk_prompt_user('Enter the new DB password for ' . $name . ' (enter ' . DB_RANDOM_PASSWORD . ' to set it to a random password): ');
        }
        $confirmPassword = dtk_prompt_user('Confirm the password: ');
      }
    }
    return $password;
  }
  
}
