<?php
/**
 * @file Defines the DrupalSiteRefreshPlugin.
 */

/**
 * Responsible for registering SiteRefreshCommand and SubSiteRefreshCommand.
 * 
 * @ingroup plugins
 */
class DrupalSiteRefreshPlugin extends GenericPlugin implements EventListener {
  
  public function initialize() {
    $this->events()->registerListener(array(
      EVENT_CORE_REGISTER_COMMANDS,
      EVENT_FIND_HELP_INSTRUCTIONS,
    ), $this);
  }
  
  public function captureEvent(DtkEvent &$event, $type) {
    switch ($type) {
      case EVENT_FIND_HELP_INSTRUCTIONS:
        if ($event instanceof HelpInstructionsEvent) {
          $site = new HelpInstructions($this->str(STRING_HELP_DSM_CATEGORY), 'site-refresh', $this->str(STRING_HELP_SITE_REFRESH_DESCRIPTION));
          $site->defineArgument(1, $this->str(STRING_HELP_SITE_NAME));
          $event->registerInstruction($site);
          $subsite = new HelpInstructions($this->str(STRING_HELP_DSSM_CATEGORY), 'subsite-refresh', $this->str(STRING_HELP_SUBSITE_REFRESH_DESCRIPTION));
          $subsite->defineArgument(1, $this->str(STRING_HELP_SITE_NAME));
          $subsite->defineArgument(2, $this->str(STRING_HELP_SUBSITE_NAME));
          $event->registerInstruction($subsite);
        }
        break;
      case EVENT_CORE_REGISTER_COMMANDS:
        $this->router()->addCommand('site-refresh', new SiteRefreshCommand());
        $this->router()->addCommand('subsite-refresh', new SubSiteRefreshCommand());
        break;
    }
  }
  
}