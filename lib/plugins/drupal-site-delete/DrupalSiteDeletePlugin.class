<?php
/*
 * @file Defines the DrupalSiteDeletePlugin class.
 */

/**
 * String token for when we are unable to remove the site entirely.
 * 
 * @ingroup strings
 */
define('STRING_UNABLE_TO_REMOVE', 'drupal_site_delete.error.unable-to-remove');

/**
 * Event fired to remove all evidence that a subsite ever existed.
 * 
 * @ingroup events
 */
define('EVENT_REMOVE_SUBSITE_ALL', 'subsite-remove');

/**
 * Generic message if there is an error removing the subsite.
 * 
 * @ingroup strings
 */
define('STRING_ERROR_REMOVE_SUBSITE', 'drupal_site_delete.error.removing-subsite');

/**
 * Event fired after the subsite has been removed to cleanup the parent
 * site object.
 * 
 * @ingroup events
 */
define('EVENT_REMOVE_SUBSITE_CLEANUP', 'subsite-remove-cleanup');

/**
 * String token for the description of the site-delete command.
 * 
 * @ingroup strings
 */
define('STRING_HELP_SITE_DELETE_DESCRIPTION', 'help.command-desc.site-delete');

/**
 * String token for the description of the subsite-delete command.
 * 
 * @ingroup strings
 */
define('STRING_HELP_SUBSITE_DELETE_DESCRIPTION', 'help.command-desc.subsite-delete');

/**
 * Responsible for registering the SiteDeleteCommand object and its
 * configuration, etc.
 */
class DrupalSiteDeletePlugin extends GenericPlugin implements EventListener {
  
  public function initialize() {
    $this->events()->registerListener(array(
      EVENT_CORE_REGISTER_COMMANDS,
      EVENT_FIND_HELP_INSTRUCTIONS
    ), $this);
  }
  
  public function captureEvent(DtkEvent &$context, $eventType) {
    switch ($eventType) {
      case EVENT_FIND_HELP_INSTRUCTIONS:
        if ($context instanceof HelpInstructionsEvent) {
          $build = new HelpInstructions(
              $this->str(STRING_HELP_DSM_CATEGORY),
              'site-delete',
              $this->str(STRING_HELP_SITE_DELETE_DESCRIPTION)
          );
          $build->defineArgument(1, $this->str(STRING_HELP_SITE_NAME));
          $context->registerInstruction($build);
          $subbuild = new HelpInstructions(
              $this->str(STRING_HELP_DSM_CATEGORY),
              'subsite-delete',
              $this->str(STRING_HELP_SUBSITE_DELETE_DESCRIPTION)
          );
          $subbuild->defineArgument(1, $this->str(STRING_HELP_SITE_NAME));
          $subbuild->defineArgument(2, $this->str(STRING_HELP_SUBSITE_NAME));
          $context->registerInstruction($subbuild);
        }
        break;
      case EVENT_CORE_REGISTER_COMMANDS:
        $this->router()->addCommand('site-delete', new SiteDeleteCommand());
        $this->router()->addCommand('subsite-delete', new SubSiteDeleteCommand());
        break;
    }
  }
  
}
