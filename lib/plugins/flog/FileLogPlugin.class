<?php
/**
 * @file Defines the FileLogPlugin class.
 */

/**
 * Responsible for setting up file logging if requested.
 * 
 * @ingroup plugins
 */
class FileLogPlugin extends GenericPlugin implements EventListener {
    
  public function initialize() {
    $this->events()->registerListener(array(
      EVENT_CORE_REGISTER_OUTPUTS
    ), $this);
    $this->config()->extendDefaultConfiguration(array(
      CONFIG_LOG_FILE => NULL,
    ));
  }
  
  public function captureEvent(DtkEvent &$context, $type) {
    switch ($type) {
      case EVENT_CORE_REGISTER_OUTPUTS:
        $this->registerFileLogHandler($context->getVariable('debugLevel'));
        break;
    }
  }
  
  /**
   * Registers a file log handler if requested and the settings are valid.
   * 
   * @param int $debugLevel
   *   The current debug level see @ref debug_levels "Debug levels"
   */
  private function registerFileLogHandler($debugLevel) {
    $path = $this->config()->getConfig(CONFIG_LOG_FILE);
    if (!empty($path)) {
      $flog = new FileLog($path);
      if ($flog->valid()) {
        $this->out()->registerListener($flog);
      }
      else {
        $this->error(STRING_MISSING_LOG_FILE, array(
          '!path' => $path,
        ));
      }
    }
  }
  
}