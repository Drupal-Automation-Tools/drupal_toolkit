<?php
/**
 * @file Provides the MySqlDBM class.
 */

/**
 * Database management implementation to support MySQL servers.
 * 
 * Supports the following @ref db_settings "host keys":
 * - \c DB_HOST_HOST
 * - \c DB_HOST_PASSWORD
 * - \c DB_HOST_USER
 * 
 * @ingroup db_typedefs
 */
class MySqlDBM extends GenericDBM {
  
  /**
   * Constructs a DBM for MySQL.
   * 
   * @param array $settings
   *   The settings information from the server configuration.
   */
  public function __construct($settings) {
    parent::__construct($settings);
  }
  
  public function available() {
    if (!check_command('mysql')) {
      return FALSE;
    }
    return TRUE;
  }
  
  /**
   * Executes a MySQL command using the command line tool.
   * 
   * @param string $query
   *   The query to execute
   * @param string $out
   *   An output variable for the lines of code from the command.
   * 
   * @return boolean
   *   TRUE if the query executed with no errors, otherwise FALSE.
   */
  private function mysqlCommand($query, $out = '') {
    $cmd = 'mysql --host=!host --user=!user';
    if (!extra_empty($this->getSetting('password'))) {
      $cmd .= ' --password=!password';
    }
    $cmd .= ' -e !query';
    execute_system_command($cmd, array(
      '!host' => $this->getSetting(DB_HOST_HOST),
      '!user' => $this->getSetting(DB_HOST_USER),
      '!password' => $this->getSetting(DB_HOST_PASSWORD),
      '!query' => $query,
    ), $out, $exit);
    return empty($exit);
  }
  
  public function sanitizeDatabaseName($database) {
    $database = parent::sanitizeDatabaseName($database);
    if (strlen($database) > 64) {
      $database = substr($database, 0, 64);
    }
    return $database;
  }
  
  public function sanitizeUsername($username) {
    $username = parent::sanitizeUsername($username);
    if (strlen($username) > 16) {
      $username = substr($username, 0, 16);
    }
    return $username;
  }
  
  public function createDatabase($database, $username = NULL, $password = NULL, $host = NULL) {
    if (empty($host)) {
      $host = '%';
    }
    $q = 'CREATE DATABASE IF NOT EXISTS !DB; ';
    if (!empty($username)) {
      $q .= 'GRANT ALL ON !DB.* TO \'!USER\'@\'!HOST\'';
      if (!empty($password)) {
        $q .= 'IDENTIFIED BY \'!PASSWORD\';';
      }
    }
    $q .= 'FLUSH PRIVILEGES;';
    $q = str_replace_all($q, array(
      '!DB' => $database,
      '!USER' => $username,
      '!PASSWORD' => $password,
      '!HOST' => $host,
    ));
    return $this->mysqlCommand($q);
  }
  
}

