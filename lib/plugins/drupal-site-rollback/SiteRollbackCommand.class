<?php

/*
 * 
 * PREP
- only RB if there is more than one version left
- setup directory structure for rollback
- make sure all symlinks are created in the directory
 * BACKUP
- backup current DB in /reverted
 * DOWN
- maintenance mode
- change symlink to point to last build
- refresh apache server
 * PRE-ACTION
- restore all server files
* ACTION
- drop DB
- restore DB from backup
* UP
- bring sites back up
* CLEANUP
- store bad codebase in /reverted
- delete it
- move DB backup to /restored
- cleanup permissions
 * 
- save config file

 */


/**
 * Fired so that plugins can prepare the site for rolling back to a previous 
 * update.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_PREPARE', 'rollback-prep');

/**
 * Fired to confirm that a backup is being taken in case we need to rollback
 * the rollback.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_BACKUP', 'rollback-backup');

/**
 * Fired to start the backup process.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_START', 'rollback-start');

/**
 * Fired for phase 1 of the rollback process. This is intended as a pre-rollback
 * phase for things that must happen before the actual rollback happens.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_PHASE1', 'rollback-phase1');

/**
 * Fired for phase 2 of the rollback process. This is intended to be the 
 * primary rollback event used.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_PHASE2', 'rollback-phase2');

/**
 * Fired for phase 3 of the rollback process. This is intended to be the
 * post-rollback phase for things that must happen after the actual rollback.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_PHASE3', 'rollback-phase3');

/**
 * Fired when the rollback phases are all finished.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_FINISH', 'rollback-finish');

/**
 * Fired to cleanup after the rollback has been finished.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_CLEAN', 'rollback-clean');

/**
 * Fired when the cleanup process is complete.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_COMPLETE', 'rollback-complete');

/**
 * Standard error message for the rollback process.
 * 
 * @ingroup strings
 */
define('STRING_ROLLBACK_STANDARD_ERROR', 'drupal_site_rollback.error.generic');

class SiteRollbackCommand extends GenericSiteCommand {
  
  public function executeCommand() {
    
  }
  
}
