<?php
/**
 * @file Defines the DrupalSiteRollbackPlugin
 */

/**
 * Fired to rollback subsites.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_SUBSITES', 'rollback-subsites');

/**
 * Fired to prepare subsites for a rollback, eg to back up the DB.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_SUBSITE_PREP', 'rollbakc-prepare-subsites');

/**
 * Fired so that plugins can prepare the site for rolling back to a previous 
 * update.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_PREPARE', 'rollback-prep');

/**
 * Fired to confirm that a backup is being taken in case we need to rollback
 * the rollback.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_BACKUP', 'rollback-backup');

/**
 * Fired to start the backup process.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_START', 'rollback-start');

/**
 * Fired for phase 1 of the rollback process. This is intended as a pre-rollback
 * phase for things that must happen before the actual rollback happens.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_PHASE1', 'rollback-phase1');

/**
 * Fired for phase 2 of the rollback process. This is intended to be the 
 * primary rollback event used.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_PHASE2', 'rollback-phase2');

/**
 * Fired for phase 3 of the rollback process. This is intended to be the
 * post-rollback phase for things that must happen after the actual rollback.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_PHASE3', 'rollback-phase3');

/**
 * Fired when the rollback phases are all finished.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_FINISH', 'rollback-finish');

/**
 * Fired to cleanup after the rollback has been finished.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_CLEAN', 'rollback-clean');

/**
 * Fired when the cleanup process is complete.
 * 
 * @ingroup events
 */
define('EVENT_ROLLBACK_COMPLETE', 'rollback-complete');

/**
 * Standard error message for the rollback process.
 * 
 * @ingroup strings
 */
define('STRING_ROLLBACK_STANDARD_ERROR', 'drupal_site_rollback.error.generic');

/**
 * Error message for if there are two builds missing.
 * 
 * @ingroup strings
 */
define('STRING_ROLLBACK_REQUIRES_TWO_BUILDS', 'drupal_site_rollback.error.two-builds-required');

/**
 * This provides the site-rollback command to the toolkit.
 */
class DrupalSiteRollbackPlugin extends GenericPlugin implements EventListener {
  
  public function __construct() {
    $this->includeFiles(dirname(__FILE__), array(
      'SiteRollbackCommand.class',
    ));
  }
  
  public function initialize() {
    $this->events()->registerListener(array(
      EVENT_CORE_REGISTER_COMMANDS,
    ), $this);
  }
  
  public function requiredPlugins() {
    return array('DrupalSitePlugin');
  }
  
  public function captureEvent(DtkEvent &$context, $eventType) {
    switch ($eventType) {
      case EVENT_CORE_REGISTER_COMMANDS:
        $this->router()->addCommand('site-rollback', new SiteRollbackCommand());
        break;
    }
  }
  
}
