<?php
/**
 * @file Provides the DrupalSiteBuildPlugin class.
 */

/**
 * Responsible for registering SiteBuildCommand and SubSiteBuildCommand.
 * 
 * @ingroup plugins
 */
class DrupalSiteBuildPlugin extends GenericPlugin implements EventListener {
  
  public function initialize() {
    $this->events()->registerListener(array(
      EVENT_CORE_REGISTER_COMMANDS,
      EVENT_FIND_HELP_INSTRUCTIONS,
    ), $this);
    $this->config()->extendDefaultConfiguration(array(
      CONFIG_SITE_CLEANUP_ON_ERROR => TRUE,
    ));
  }
  
  public function captureEvent(DtkEvent &$context, $eventType) {
    switch ($eventType) {
      case EVENT_FIND_HELP_INSTRUCTIONS:
        if ($context instanceof HelpInstructionsEvent) {
          $build = new HelpInstructions(
              $this->str(STRING_HELP_DSM_CATEGORY),
              'site-build',
              $this->str(STRING_HELP_SITE_BUILD_DESCRIPTION)
          );
          $build->defineArgument(1, $this->str(STRING_HELP_SITE_NAME));
          $context->registerInstruction($build);
          $subbuild = new HelpInstructions(
              $this->str(STRING_HELP_DSM_CATEGORY),
              'subsite-build',
              $this->str(STRING_HELP_SUBSITE_BUILD_DESCRIPTION)
          );
          $subbuild->defineArgument(1, $this->str(STRING_HELP_SITE_NAME));
          $subbuild->defineArgument(2, $this->str(STRING_HELP_SUBSITE_NAME));
          $context->registerInstruction($subbuild);
        }
        break;
      case EVENT_CORE_REGISTER_COMMANDS:
        $this->router()->addCommand('site-build', new SiteBuildCommand());
        $this->router()->addCommand('subsite-build', new SubSiteBuildCommand());
        break;
    }
  }
  
}