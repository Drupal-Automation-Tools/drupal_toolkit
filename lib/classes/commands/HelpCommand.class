<?php
/**
 * @file Provides the HelpCommand class.
 */

/**
 * Fired to find help instructions.
 * 
 * @ingroup events
 */
define('EVENT_FIND_HELP_INSTRUCTIONS', 'find-help-instructions');

/**
 * String token for when there are no help commands defined.
 * 
 * @ingroup strings
 */
define('STRING_ERROR_NO_HELP_COMMANDS', 'help.error.no-commands');

/**
 * Fired to allow other modules to alter help instructions.
 * 
 * @ingroup events
 */
define('EVENT_ALTER_HELP_INSTRUCTIONS', 'alter-help-instructions');

define('OPTION_HELP_COMMAND', 'command');

define('STRING_HELP_CORE_CATEGORY', 'string.category.core');

define('STRING_HELP_COMMAND_DESC_HELP', 'string.command-desc.help');

define('STRING_HELP_OPTION_HELP_COMMAND_DESC', 'string.option.command');

/**
 * Basic command that provides help output.
 * 
 * @ingroup commands
 */
class HelpCommand extends GenericCommand {
    
  public function executeCommand() {
    $event = new HelpInstructionsEvent();
    $help = new HelpInstructions($this->str(STRING_HELP_CORE_CATEGORY), 'help', $this->str(STRING_HELP_COMMAND_DESC_HELP));
    $help->defineOption(OPTION_HELP_COMMAND, $this->str(STRING_HELP_OPTION_HELP_COMMAND_DESC));
    $event->registerInstruction($help);
    $this->events()->fireEvent(EVENT_FIND_HELP_INSTRUCTIONS, $event);
    $event->reset();
    $this->events()->fireEvent(EVENT_ALTER_HELP_INSTRUCTIONS, $event);
    $categorized = array();
    foreach ($event->getInstructions() as $instruction) {
      if ($instruction instanceof HelpInstructions) {
        $category = $instruction->getCategory();
        if (!isset($categorized[$category])) {
          $categorized[$category] = array();
        }
        $categorized[$category][$instruction->getCommandName()] = $instruction;
      }
    }
    $found = FALSE;
    ksort($categorized);
    $requested = $this->args()->getOption(OPTION_HELP_COMMAND);
    foreach ($categorized as $category => $list) {
      if (empty($requested) || isset($list[$requested])) {
        echo PHP_EOL;
        echo terminal_color_string($category, TERMINAL_FOREGROUND_COLOR_WHITE) . PHP_EOL . '--------------------' . PHP_EOL;
        foreach ($list as $key => $command) {
          if (empty($requested) || $key === $requested) {
            if (!empty($requested)) {
              echo $command->getDisplayText() . PHP_EOL;
            }
            else {
              echo $command->getShortDisplayText() . PHP_EOL;
            }
            $found = TRUE;
          }
        }
        echo PHP_EOL;
      }
    }
    if (!$found) {
      echo $this->strings()->getString(STRING_ERROR_NO_HELP_COMMANDS) . PHP_EOL;
    }
  }
  
}
